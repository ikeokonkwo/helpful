
<!DOCTYPE html>
<html>
  <head>

   <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>

       #map {
        height: 450px;
        width: 70%;
        left: 200px;
       }
      .controls {
        margin-top: 10px;
        border: 1px solid transparent;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        height: 32px;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 300px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      .pac-container {
        font-family: Roboto;
      }

      #type-selector {
        color: #fff;
        background-color: #4d90fe;
        padding: 5px 11px 0px 11px;
      }

      #type-selector label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }
    </style>

 <script type="text/javascript" src="js/jquery.js"></script>


  </head>

  <body>
  <br>
  <div class="welcome">
    <h3>Welcome User</h3>
  </div>

  <div class="heading">
 	<h5> Here are organizations looking for volunteers: </h5>
  </div>
<!-- =========================================================================
Function Breakdown of the following Map Div....
1) initMap function: I am calling a JS function to initialize a map @ my home address.
2) creatMarker function: takes the argument of the (coords, map, and title) to add a new pin
NOTE: this has the var saved outside the function so as to be used as a handler for other stuff.
3) createInfoWindow: makes the pop-up box appear  -->	    
<!-- 4) printlocations: renders the seeds onto the Map  -->
   
	<input id="pac-input" class="controls" type="text" placeholder="Search by location">


    <div id="map"></div>
  
	    <script>

	    function initMap() {
	        var uluru = {lat: 25.766058, lng: -80.196155};
	        var map = new google.maps.Map(document.getElementById('map'), {
	          zoom: 13,
	          center: uluru
	        });

	        var defaultBounds = new google.maps.LatLngBounds(
				  new google.maps.LatLng(-90, -180),
				  new google.maps.LatLng(-90, 180));
	        var options= {
	        	bounds:defaultBounds
	        };

	        var input = document.getElementById('pac-input');
	        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

	        var autocomplete = new google.maps.places.Autocomplete(input, options);
	        autocomplete.bindTo('bounds', map);
	   	
	        var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
            });

           autocomplete.addListener('place_changed', function() {
           infowindow.close();
           marker.setVisible(false);
           var place = autocomplete.getPlace();
           if (!place.geometry) {
            // User entered the name of a Place that was not suggested and
            // pressed the Enter key, or the Place Details request failed.
            window.alert("No details available for input: '" + place.name + "'");
            return;
          }

	
          // If the place has a geometry, then present it on a map.
          if (place.geometry.viewport) {
            map.fitBounds(place.geometry.viewport);
          } else {
            map.setCenter(place.geometry.location);
            map.setZoom(17);  // Why 17? Because it looks good.
          }
          marker.setIcon(/** @type {google.maps.Icon} */({
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(35, 35)
          }));
          marker.setPosition(place.geometry.location);
          marker.setVisible(true);

          var address = '';
          if (place.address_components) {
            address = [
              (place.address_components[0] && place.address_components[0].short_name || ''),
              (place.address_components[1] && place.address_components[1].short_name || ''),
              (place.address_components[2] && place.address_components[2].short_name || '')
            ].join(' ');
          }

          infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
          infowindow.open(map, marker);
        });

	
		function createMarkerPlus(thePosting, map){
			var latitude = Number(thePosting.latitude);
			var longitude = Number(thePosting.longitude);

			// var location = String(thePosting.location)
			// var email = String(thePosting.email)
			// var phone = String (thePosting.phone)
			console.log("CREATING MARKER", { latitude, longitude, title: thePosting.title })

		  	var marker = new google.maps.Marker({
				position: { lat:latitude, lng:longitude },
				title: thePosting.title,
				map: map
			});
      
      		var info = createInfoWindow(thePosting);
	    	google.maps.event.addListener(marker, 'click', function() {
		       info.open(map, marker);

		var input = document.getElementById('pac-input');
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

			});
		}
			

		// Get GEOLOCATION OF USER- and place an info window there
		var infoWindow = new google.maps.InfoWindow({map: map});
		        if (navigator.geolocation) {
	          		navigator.geolocation.getCurrentPosition(function(position) {
	            	var pos = {
	              	lat: position.coords.latitude,
	              	lng: position.coords.longitude
	            	};

	            infoWindow.setPosition(pos);
	            infoWindow.setContent('My location.');
	            map.setCenter(pos);
	             }, function() {
	            handleLocationError(true, infoWindow, map.getCenter());
	          });
	        	} else {
	         
	    // Browser doesn't support Geolocation
	    handleLocationError(false, infoWindow, map.getCenter());
	     		   }
	      

	      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
	        infoWindow.setPosition(pos);
	        infoWindow.setContent(browserHasGeolocation ?
	                              'Error: The Geolocation service failed.' :
	                              'Error: Your browser doesn\'t support geolocation.');
	      }


	      	// createInfoWindow(thePosting.description);

			function createInfoWindow(thePosting){
				// var text = thePosting.description

				var infoWindowHtml = `
					<div class="card-blue-grey-darken-1">
						<div class="card-content-black-text">
							<div class="title-width card-title">
							${thePosting.title}
							</div>
							<br><br>
							<p>${thePosting.description}</p>
						</div>

						<br><br>
						<div class="card-action">
							<h7> <a href="/postings/${thePosting.id}">See details & reviews</a> </h7>
						</div>
					</div>`;

				var infowindow2 = new google.maps.InfoWindow({
					content: infoWindowHtml
				});
				return infowindow2;
			}


		     // createMarker({lat:some_lat, lng:some_lng}, map, "BWC");
		     // createMarker({lat:42, lng:-71}, map, "BWC");


		     $.ajax({
		     		type: "GET",
		     		url: "/locations",
		     		success: printlocations,
		     		error: handleLocationError,
		     	});

		     function printlocations(postings){
		     	console.log("ayyeee");

		     	console.log(postings);
		     	postings.forEach(function (x){
	 			    createMarkerPlus(x, map); 
		   		});
		  	  }
		   

		  	function initialize() {

				var input = document.getElementById('searchTextField');
				var autocomplete = new google.maps.places.Autocomplete(input);
				}
				google.maps.event.addDomListener(window, 'load', initialize);

				// Create the search box and link it to the UI element.



	}		
	</script>


 <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCqdy40KUKm4WZFLhpFLGZA8GlEVow7YQ4&callback=initMap&libraries=places">
 </script>
 
  </body>
</html>






